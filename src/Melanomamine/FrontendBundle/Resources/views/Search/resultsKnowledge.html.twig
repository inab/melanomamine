{% extends '::frontend.html.twig' %}
{% block title %}Listing Evidences {% endblock %}
{% block article %}
    {% include 'MelanomamineFrontendBundle:Search:tags_code.html.twig' %}
    <div id="evidences">
        <div id="venn1"></div>
        <div id="venn2"></div>
        <div class="clear-both"></div>
        <div id="panels">
            <div id="genes1" class="info-panel">
                <h3>Genes Related to {{ concept1 }}</h3>
                <span class="more">
                        {%for gene in arrayGenes1%}{{gene['ontology']}}<br/>{%endfor%}
                </span>
            </div>
            <div id="genes2" class="info-panel">
                <h3>Genes Related to {{ concept2 }}</h3>
                <span class="more">
                    {%for gene in arrayGenes2%}{{gene['ontology']}}<br/>{%endfor%}
                </span>
            </div>
            <div id="genesIntersection" class="info-panel">
                <h3>Genes Related to {{ concept1 }}-{{ concept2 }} intersection</h3>
                <span class="more">
                    {%for gene in arrayGenesIntersection%}{{gene['ontology']}}<br/>{%endfor%}
                </span>
            </div>
            <div id="compounds1" class="info-panel">
                <h3>Compounds Related to {{ concept1 }}</h3>
                <span class="more">
                    {%for compound in arrayCompounds1%}{{compound['mention']}}<br/>{%endfor%}
                </span>
            </div>
            <div id="compounds2" class="info-panel">
                <h3>Compounds Related to {{ concept2 }}</h3>
                <span class="more">
                    {%for compound in arrayCompounds2%}{{compound['mention']}}<br/>{%endfor%}
                </span>
            </div>
            <div id="compoundsIntersection" class="info-panel">
                <h3>Compounds Related to {{ concept1 }}-{{ concept2 }} intersection</h3>
                <span class="more">
                    {%for compound in arrayCompoundsIntersection%}{{compound['mention']}}<br/>{%endfor%}
                </span>
            </div>
        </div>

    </div>

{% include 'MelanomamineFrontendBundle:Search:scripts_code.html.twig' %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="{{ asset('javascripts/venn.js/venn.js') }}"></script>

<script>
var sets = [
         {"sets": [0], "label": "{{ concept1 }}", "size": {{ arrayGenes1|length }},"entityType":"genes1", "listConcept":"{%for gene in arrayGenes1%}{{gene['ontology']}}\n{%endfor%}"},
         {"sets": [1], "label": "{{ concept2 }}", "size": {{ arrayGenes2|length }},"entityType":"genes2", "listConcept":"{%for gene in arrayGenes2%}{{gene['ontology']}}\n{%endfor%}"},
         {"sets": [0, 1], "size": {{ arrayGenesIntersection | length }},"entityType":"genesIntersection", "listConcept":"{%for gene in arrayGenesIntersection%}{{gene['ontology']}}\n{%endfor%}"}];

var chart = venn.VennDiagram()
                 .width(450)
                 .height(350);

var div = d3.select("#venn1")
div.datum(sets).call(chart);

var tooltip = d3.select("body").append("div")
    .attr("class", "venntooltip");

div.selectAll("path")
    .style("stroke-opacity", 0)
    .style("stroke", "#fff")
    .style("stroke-width", 0)

div.selectAll("g")
    .on("mouseover", function(d, i) {
        // sort all the areas relative to the current item
        venn.sortAreas(div, d);

        // Display a tooltip with the current size
        tooltip.transition().duration(400).style("opacity", .9);
        tooltip.text(d.size + " Genes");

        // highlight the current path
        var selection = d3.select(this).transition("tooltip").duration(400);
        selection.select("path")
            .style("stroke-width", 3)
            .style("fill-opacity", d.sets.length == 1 ? .4 : .1)
            .style("stroke-opacity", 1);
    })

    .on("mousemove", function() {
        tooltip.style("left", (d3.event.pageX) + "px")
               .style("top", (d3.event.pageY - 28) + "px");
    })

    .on("mouseout", function(d, i) {
        tooltip.transition().duration(400).style("opacity", 0);
        var selection = d3.select(this).transition("tooltip").duration(400);
        selection.select("path")
            .style("stroke-width", 0)
            .style("fill-opacity", d.sets.length == 1 ? .25 : .0)
            .style("stroke-opacity", 0);
    })

    .on("click", function(d, i) {
        var entityType=d["entityType"]; //This one has to be shown. Rest has to be hidden;
        $('#panels').show();
        $('.info-panel').hide();
        $('#'+entityType).show();
        //.toggle("slide", {direction: 'up'}, 750);
    });
</script>

<script>

var sets2 = [
         {"sets": [0], "label": "{{ concept1 }}", "size": {{ arrayCompounds1|length }},"entityType":"compounds1", "listConcept":"{%for compound in arrayCompounds1%}{{compound['mention']}}\n{%endfor%}"},
         {"sets": [1], "label": "{{ concept2 }}", "size": {{ arrayCompounds2|length }},"entityType":"compounds2", "listConcept":"{%for compound in arrayCompounds2%}{{compound['mention']}}\n{%endfor%}"},
         {"sets": [0, 1], "size": {{ arrayCompoundsIntersection | length }}, "entityType":"compoundsIntersection", "listConcept":"{%for compound in arrayCompoundsIntersection%}{{compound['mention']}}\n{%endfor%}"}];

var chart = venn.VennDiagram()
                 .width(450)
                 .height(350);

var div = d3.select("#venn2")
div.datum(sets2).call(chart);

var tooltip = d3.select("body").append("div")
    .attr("class", "venntooltip");

div.selectAll("path")
    .style("stroke-opacity", 0)
    .style("stroke", "#fff")
    .style("stroke-width", 0)

div.selectAll("g")
    .on("mouseover", function(d, i) {
        // sort all the areas relative to the current item
        venn.sortAreas(div, d);

        // Display a tooltip with the current size
        tooltip.transition().duration(400).style("opacity", .9);
        tooltip.text(d.size + " Compounds");

        // highlight the current path
        var selection = d3.select(this).transition("tooltip").duration(400);
        selection.select("path")
            .style("stroke-width", 3)
            .style("fill-opacity", d.sets.length == 1 ? .4 : .1)
            .style("stroke-opacity", 1);
    })

    .on("mousemove", function() {
        tooltip.style("left", (d3.event.pageX) + "px")
               .style("top", (d3.event.pageY - 28) + "px");
    })

    .on("mouseout", function(d, i) {
        tooltip.transition().duration(400).style("opacity", 0);
        var selection = d3.select(this).transition("tooltip").duration(400);
        selection.select("path")
            .style("stroke-width", 0)
            .style("fill-opacity", d.sets.length == 1 ? .25 : .0)
            .style("stroke-opacity", 0);
    })

    .on("click", function(d, i) {
        var entityType=d["entityType"]; //This one has to be shown. Rest has to be hidden;
        $('#panels').show();
        $('.info-panel').hide();
        $('#'+entityType).show();
        //.toggle("slide", {direction: 'up'}, 750);

    });
</script>
{% endblock %}
